[COVERAGE]
; Coverage level of api, choose (uncomment) one option from next lines
; If coverage level is not fulfilled, program will produce exit code 1
;api_coverage_level = COVERAGE_DISABLED
;api_coverage_level = COVERAGE_ENDPOINT
;api_coverage_level = COVERAGE_METHOD
api_coverage_level = COVERAGE_RESPONSE

; Determine, if default response is treated as normal response code when response coverage is determinded, default is false
default_response_as_normal = false

; Parameter coverage level, choose (uncomment) one option from next lines if necessary
; If coverage level is not fulfilled, program will produce exit code 1
;parameter_coverage_level = COVERAGE_DISABLED
parameter_coverage_level = COVERAGE_USED_ONCE
;parameter_coverage_level = COVERAGE_USED_TWICE_UNIQUELY

; Whether or not program should crash (produce exit code 1) in the end of execution if critical coverage or anomaly error is detected

[CRITICAL_ANOMALIES]
; Anomalies which will cause critical failure -> prorgram exiting with code 1
;critical_anomalies = UNDEFINED_RESPONSE_CODE_DEFAULT_NOT_SPECIFIED,MISSING_REQUIRED_REQUEST_PARAMETER,BROKEN_REQUEST_BODY,UNDEFINED_RESPONSE_CODE_DEFAULT_IS_SPECIFIED,BROKEN_RESPONSE_BODY,INVALID_RESPONSE_BODY,UNDEFINED_METHOD_OF_ENDPOINT
critical_anomalies = UNDEFINED_RESPONSE_CODE_DEFAULT_NOT_SPECIFIED,MISSING_REQUIRED_REQUEST_PARAMETER,BROKEN_REQUEST_BODY,UNDEFINED_RESPONSE_CODE_DEFAULT_IS_SPECIFIED,BROKEN_RESPONSE_BODY,INVALID_RESPONSE_BODY,UNDEFINED_METHOD_OF_ENDPOINT

[SERVER_AND_BASEPATH]
; Api specification may not have server/basepath urls specified, or your testing setup ulrs may differ from spec url
; In this section you may optionally provide server and basepath
; If not given, program tries to match HAR file URLs to API specification paths without help of this information
; This should work mostly, but in special cases it may cause wrong matches
; Examples below
;serveraddress = www.swagger.com:81
;serveraddress = localhost
;basepath = /v2
;basepath = /myapi/myapispeciallocation
serveraddress = localhost
basepath = /v3


[FILE_PATHS]
report_filename_coverage_failure_report = coverage_failure_report.txt
report_filename_anomaly_failure_report = anomaly_failure_report.txt
report_filename_anomaly_report = anomaly_report.txt
report_filename_large_report_txt = large_report_text.txt
report_filename_large_report_json = large_report_json.json

[EXCLUSIONS]
; Give list of endpoints which are excluded from analysis
;exclude_endpoints = /example/endpoint1,/example/{examplepathparameter}/endpoint2

[MISC]
; Whether or not program should crash (produce exit code 1) in the end of execution if critical coverage or anomaly error is detected
crash_in_critical_failure = true
;crash_in_critical_failure = false

; Whether or not to print anomalies to the console output
suppress_console_anomalies_output = true
;suppress_console_anomalies_output = true

; Whether or not to print anomalies request/response entries to large textual report
; If suppressed, report shows only anomaly unique id and short description of anomaly
suppress_large_textual_report_anomalies_detailed_output = true
;suppress_large_textual_report_anomalies_detailed_output = true

; Whether or not to print har log entries to large textual report
suppress_large_textual_report_logs_output = true
;suppress_large_textual_report_logs_output = true